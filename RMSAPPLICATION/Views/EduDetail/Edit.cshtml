@model RMSCORE.Models.Operation.VMEduDetailOperation
@{
    ViewBag.title = "Educational details";
    Layout = null;
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "formEditID", id = "formEditID" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.CandidateID)
    @Html.HiddenFor(model => model.EduID)
    <head>
        <style>
            .required:after {
                content: "*";
                font-weight: bold;
                color: red;
            }
        </style>
    </head>
    <div class="modal-header bg-primary">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">
            <i class="icon-menu7"></i> &nbsp;Edit Education &nbsp;<small class="text-black">(All fields with an asterisk (*) are mandatory)</small>
        </h4>
    </div>
    <div class="modal-body">
        <div class="form-horizontal">
            @*<small>
                Attendance Information of   <strong>@Model.Cand: Emp No @Model.PEmployeeID</strong>
                </small>*@
            @*<hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.CandidateID)*@

            <div class="form-group">
                <div class="required control-label col-md-1 text-semibold">Level</div>
                <div class="col-md-3">
                    @Html.DropDownList("DegreeLevelID", null, new { @class = "form-control" })
                    @Html.HiddenFor(model => model.DegreeLevelID, new { id = "selectedDegreeLevelIDHidden" })
                    <div class="small">
                        @Html.ValidationMessageFor(model => model.DegreeLevelID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div id="DegreeTypeDD">
                    <div class=" label-control text-semibold col-md-1">Degree Type</div>
                    <div class="col-md-3">
                        <select class="form-control dropdown-toggle dropdown ComboBoxWidth" id="DegreeTypeID" @*style=" width:300px;"*@ name="DegreeTypeID"></select>
                        @Html.HiddenFor(model => model.DegreeTypeID, new { id = "selectedCityIdHidden" })
                        @Html.ValidationMessageFor(model => model.DegreeTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div id="OtherDegree">
                    <div class="required label-control text-semibold col-md-1">Other Degree Type</div>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.OtherDegreeType, new { htmlAttributes = new { @class = "form-control", placeholder = "Title" } })
                        @Html.ValidationMessageFor(model => model.OtherDegreeType, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div id="DegreeTB">
                    <div class="required label-control text-semibold col-md-1"> Degree Title  </div>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.DegreeTitle, new { htmlAttributes = new { @class = "form-control", placeholder = "Title" } })
                        <small class="text-grey-300">Example: BSc (Hon's) in CS</small>
                        @Html.ValidationMessageFor(model => model.DegreeTitle, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div id="MajorSubjectDD">
                    <div class="required control-label text-semibold col-md-1"> Major  </div>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.MajorSubject, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MajorSubject, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div id="InstitutionDD">
                    <div class="control-label text-semibold col-md-1">Institution</div>
                    <div class="col-md-3">
                        @Html.DropDownList("InstitutionID", null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.InstitutionID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div id="OtherInstitute">
                    <div class="required label-control text-semibold col-md-1"> Institute Name  </div>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.OtherInstitute, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OtherInstitute, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="required control-label col-md-1 text-semibold">Start&nbsp;Date</div>
                <div class="col-md-3">
                    <input class="form-control" id="StartDate" name="StartDate" value="@(Model.StartDate==null?DateTime.Today.ToString("dd/MM/yyyy"):Model.StartDate.Value.ToString("dd/MM/yyyy"))" placeholder="DD/MM/YYYY" type="text" />
                    @*@Html.TextBoxFor(x => x.StartDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })*@
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
                <div id="hidedatediv">
                    <div class="required control-label col-md-1 text-semibold">End&nbsp; Date</div>
                    <div class="col-md-3">
                        <input class="form-control" id="EndDate" name="EndDate" value="@(Model.EndDate==null?DateTime.Today.ToString("dd/MM/yyyy"):Model.EndDate.Value.ToString("dd/MM/yyyy"))" placeholder="DD/MM/YYYY" type="text" />
                       @* @Html.TextBoxFor(x => x.EndDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })*@
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-1">
                    <label class=" checkbox-inline checkbox-right text-semibold col-md-8" for="InProgress">
                        @Html.CheckBox("InProgress", new { @class = "styled", @id = "InProgress" })
                        @Html.ValidationMessageFor(model => model.InProgress, "", new { @class = "text-danger" })
                        In Progress
                    </label>
                </div>
            </div>
            <div class="form-group">
                <div class="form-group col-md-3">
                    <label class="required text-semibold">Total Marks</label>
                    <div>
                        @Html.EditorFor(model => model.TotalMark, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalMark, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-3">
                    <label class="required text-semibold">Obtained Marks</label>
                    <div>@Html.EditorFor(model => model.ObtainedMark, new { htmlAttributes = new { @class = "form-control" } })</div>
                    @Html.ValidationMessageFor(model => model.ObtainedMark, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-3">
                    <label class="required text-semibold">Percentage</label>
                    <div>@Html.EditorFor(model => model.Percentage, new { htmlAttributes = new { @class = "form-control" } })</div>
                    @Html.ValidationMessageFor(model => model.Percentage, "", new { @class = "text-danger" })
                </div>
                <div id="CGPATB">
                    <div class="form-group col-md-3">
                        <label class="required text-semibold">CGPA</label>
                        <div>
                            @Html.EditorFor(model => model.CGPA, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CGPA, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class=" btn bg-grey" name="Close" data-dismiss="modal">Close</button>
        @*<button type="submit" class="btn btn-success bg-success-800" value="Save">Save</button>*@
        <button type="button" id="btnPostEdit" class="btn bg-primary" value="Save">Save</button>
        <button type="button" id="btnGetDelete" onclick="EduDetailGetDelete(@Model.EduID)" class="btn bg-grey">Delete</button>
    </div>
}
<script>
    $(document).ready(function () {
        var date_input = $('input[name="StartDate"]'); //our date input has the name "date"
        var container = $('.bootstrap-iso form').length > 0 ? $('.bootstrap-iso form').parent() : "body";
        date_input.datepicker({
            format: 'dd/mm/yyyy',
            orientation: 'bottom',
            container: container,
            todayHighlight: true,
            autoclose: true,
        })
    })
</script>
<script>
    $(document).ready(function () {
        var date_input = $('input[name="EndDate"]'); //our date input has the name "date"
        var container = $('.bootstrap-iso form').length > 0 ? $('.bootstrap-iso form').parent() : "body";
        date_input.datepicker({
            format: 'dd/mm/yyyy',
            orientation: 'bottom',
            container: container,
            todayHighlight: true,
            autoclose: true,
        })
    })
</script>
<script type="text/javascript">
    $(document).ready(function () {
        EduDetailPostEdit(@Model.CandidateID);
        DegreeChange();
        InstituteChange();
        LoadDegreeTypeDD();
    });
</script>
