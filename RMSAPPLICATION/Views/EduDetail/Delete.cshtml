@model RMSCORE.Models.Operation.VMEduDetailOperation
@{
    ViewBag.title = "Educational details";
    Layout = null;
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "formDeleteID", id = "formDeleteID" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.EduID)
    @Html.HiddenFor(model => model.CandidateID)
    @Html.HiddenFor(model => model.Institution)
    @Html.HiddenFor(model => model.MajorSubject)
    @Html.HiddenFor(model => model.ObtainedMark)
    @Html.HiddenFor(model => model.TotalMark)
    @Html.HiddenFor(model => model.Percentage)
    @Html.HiddenFor(model => model.CGPA)
    @Html.HiddenFor(model => model.PassingYear)
    @Html.HiddenFor(model => model.InProgress)
    @Html.HiddenFor(model => model.GradeName)
    @Html.HiddenFor(model => model.OtherDegreeLevelName)
    <div class="modal-header bg-primary">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">
            <i class="icon-menu7"></i> &nbsp;Delete Education
        </h4>
    </div>
    <div class="modal-body">
        <div class="row">
            <div class="form-group col-md-3">
                <div>
                    <label class="required control-label text-semibold">Education Level Name</label>
                    @Html.DropDownList("DegreeLevelID", null, new { @class = "form-control" })
                    @Html.HiddenFor(model => model.DegreeLevelID, new { id = "selectedDegreeLevelIDHidden" })
                </div>
                <div class="small">
                    @Html.ValidationMessageFor(model => model.DegreeLevelID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div id="OtherDegreelevel" class="form-group col-md-3">
                <div>
                    <label class="required control-label text-semibold">Education Level Name</label>
                    @Html.EditorFor(model => model.OtherDegreeLevelName, new { htmlAttributes = new { @class = "form-control", placeholder = "Title", id = "OtherDegreeLevelName" } })
                </div>
                <div class="small">
                    @Html.ValidationMessageFor(model => model.OtherDegreeLevelName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div id="DegreeTypeDD" class="form-group col-md-3">
                <div>
                    <label class="required control-label text-semibold">Degree Type Name</label>
                    <select class="form-control dropdown-toggle dropdown ComboBoxWidth" id="DegreeTypeID" @*style=" width:300px;"*@ name="DegreeTypeID"></select>
                    @Html.HiddenFor(model => model.DegreeTypeID, new { id = "selectedCityIdHidden" })
                </div>
                <div class="small">
                    @Html.ValidationMessageFor(model => model.DegreeTypeID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div id="OtherDegree" class="form-group col-md-3">
                <div>
                    <label class="required control-label text-semibold">Degree Type Name</label>
                    @Html.EditorFor(model => model.OtherDegreeType, new { htmlAttributes = new { @class = "form-control", placeholder = "Title", id = "OtherDegreeType" } })
                </div>
                <div class="small">
                    @Html.ValidationMessageFor(model => model.OtherDegreeType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div id="DegreeTB" class="form-group col-md-3">
                <div>
                    <label class="required control-label text-semibold">Degree Title</label>
                    @Html.EditorFor(model => model.DegreeTitle, new { htmlAttributes = new { @class = "form-control", placeholder = "Title" } })
                </div>
                <div class="small text-grey-300">
                    <small>Example: BSc (Hon's) in CS</small>
                    @Html.ValidationMessageFor(model => model.DegreeTitle, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div id="MajorSubjectDD" class="form-group col-md-3">
                <div>
                    <label class="required control-label text-semibold">Major Subject</label>
                    @Html.EditorFor(model => model.MajorSubject, new { htmlAttributes = new { @class = "form-control", placeholder = "Title" } })
                </div>
                <div class="small">
                    @Html.ValidationMessageFor(model => model.MajorSubject, "", new { @class = "text-danger" })
                </div>
            </div>
            <div id="InstitutionDD" class="form-group col-md-3">
                <div>
                    <label class="required control-label text-semibold">Institution Name</label>
                    @Html.DropDownList("InstitutionID", null, new { @class = "form-control" })
                </div>
                <div class="small">
                    @Html.ValidationMessageFor(model => model.InstitutionID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div id="OtherInstitute" class="form-group col-md-3">
                <div>
                    <label class="required control-label text-semibold">Institution Name</label>
                    @Html.EditorFor(model => model.OtherInstitute, new { htmlAttributes = new { @class = "form-control", id = "OtherInstitute" } })
                </div>
                <div class="small">
                    @Html.ValidationMessageFor(model => model.OtherInstitute, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-3">
                <div>
                    <label class="required control-label text-semibold">Start Date</label>
                    <input class="form-control" id="StartDate" name="StartDate" value="@(Model.StartDate==null?DateTime.Today.ToString("dd/MM/yyyy"):Model.StartDate.Value.ToString("dd/MM/yyyy"))" placeholder="DD/MM/YYYY" type="text" />
                    @*@Html.TextBoxFor(x => x.DOB, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })*@
                    <div class="small">
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <span class="help-block">Format must be (dd/mm/yyyy)</span>
            </div>
            <div id="hidedatediv" class="form-group col-md-3">
                <div>
                    <label class="required control-label text-semibold">End Date</label>
                    <input class="form-control" id="EndDate" name="EndDate" value="@(Model.EndDate==null?DateTime.Today.ToString("dd/MM/yyyy"):Model.EndDate.Value.ToString("dd/MM/yyyy"))" placeholder="DD/MM/YYYY" type="text" />
                    @*@Html.TextBoxFor(x => x.DOB, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })*@
                    <div class="small">
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <span class="help-block">Format must be (dd/mm/yyyy)</span>
            </div>
            <div class="col-md-3">
                <label class="checkbox-inline checkbox-right text-semibold col-md-6" for="InProgress">
                    @Html.CheckBox("InProgress", new { @class = "styled", @id = "InProgress", @name = "InProgress" })
                    @Html.ValidationMessageFor(model => model.InProgress, "", new { @class = "text-danger" })
                    In Progress
                </label>
            </div>

        </div>
        <div class="row" id="marksdiv">
            <div class="form-group col-md-3">
                <div>
                    <label class="required control-label text-semibold">Total Marks</label>
                    @Html.EditorFor(model => model.TotalMark, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="small">
                    @Html.ValidationMessageFor(model => model.TotalMark, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-3">
                <div>
                    <label class="required control-label text-semibold">Obtained Marks</label>
                    @Html.EditorFor(model => model.ObtainedMark, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="small">
                    @Html.ValidationMessageFor(model => model.ObtainedMark, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-2">
                <div>
                    <label class="required control-label text-semibold">Percentage</label>
                    @Html.EditorFor(model => model.Percentage, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="small">
                    @Html.ValidationMessageFor(model => model.Percentage, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-2">
                <div>
                    <label class="required control-label text-semibold">Grade Name</label>
                    @Html.EditorFor(model => model.GradeName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="small">
                    @Html.ValidationMessageFor(model => model.GradeName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div id="CGPATB" class="form-group col-md-2">
                <div>
                    <label class="required control-label text-semibold">CGPA</label>
                    @Html.EditorFor(model => model.CGPA, new { htmlAttributes = new { @class = "form-control", placeholder = "Out of 4" } })
                </div>
                <div class="small">
                    @Html.ValidationMessageFor(model => model.CGPA, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <label class="text-black">Are you sure you want to delete?</label>
        &nbsp;&nbsp;
        <button type="button" id="btnGetEdit" class="btn bg-primary" onclick="EduDetailGetEdit(@Model.EduID)">Back</button>
        @*<button type="button" class=" btn btn-primary bg-primary-300" name="Close" data-dismiss="modal">Close</button>*@
        <button type="button" id="btnDeletePost" class="btn bg-grey" value="Save">Delete</button>
        @*<button type="button" id="btnPostDelete" class="btn btn-success bg-success-800" value="Delete">Delete</button>*@
    </div>
}
<script>
    $(document).ready(function () {
        var date_input3 = $('input[name="StartDate"]'); //our date input has the name "date"
        var container = $('.bootstrap-iso form').length > 0 ? $('.bootstrap-iso form').parent() : "body";
        date_input3.datepicker({
            format: 'mm/dd/yyyy',
            orientation: 'bottom',
            container: container,
            todayHighlight: true,
            autoclose: true,
        })
    })
</script>
<script>
    $(document).ready(function () {
        var date_input4 = $('input[name="EndDate"]'); //our date input has the name "date"
        var container = $('.bootstrap-iso form').length > 0 ? $('.bootstrap-iso form').parent() : "body";
        date_input4.datepicker({
            format: 'mm/dd/yyyy',
            orientation: 'bottom',
            container: container,
            todayHighlight: true,
            autoclose: true,
        })
    })
</script>
<script type="text/javascript">
    $(document).ready(function () {
        EduDetailPostDelete(@Model.CandidateID);
        DegreeChange();
        InstituteChange();
        LoadDegreeTypeDD();
        DegreeTypeChange();
    });
</script>
