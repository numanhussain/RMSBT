@model RMSCORE.Models.Operation.VMExperienceOperation
@{
    ViewBag.title = "Experience details";
    Layout = null;
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "formDeleteID", id = "formDeleteID" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.ExpID)
    @Html.HiddenFor(model => model.CandidateID)
    @Html.HiddenFor(model => model.IndustryID)
    @Html.HiddenFor(model => model.PositionTitle)
    @Html.HiddenFor(model => model.StartDate)
    @Html.HiddenFor(model => model.EndDate)
    @Html.HiddenFor(model => model.EmployerName)
    @Html.HiddenFor(model => model.Address)
    @Html.HiddenFor(model => model.CurrentlyWorking)
    @Html.HiddenFor(model => model.Responsibility1)
    @Html.HiddenFor(model => model.Responsibility2)
    @Html.HiddenFor(model => model.Responsibility3)
    @Html.HiddenFor(model => model.CareerLevelID)
    @Html.HiddenFor(model => model.ContactEmployerYes)
    @Html.HiddenFor(model => model.ContactEmployerNo)
    @Html.HiddenFor(model => model.ReasonOfLeaving)
    @Html.HiddenFor(model => model.SupervisorName)
    @Html.HiddenFor(model => model.CountryID)
    <div class="modal-header bg-primary">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">
            <i class="icon-menu7"></i> &nbsp;Delete Job Detail
        </h4>
    </div>
    <div class="modal-body">
        <div class="form-horizontal">
            <div class="form-group">
                <div class="control-label col-md-1 text-semibold">Industry</div>
                <div class="col-md-2">
                    @Html.DropDownList("IndustryID", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IndustryID, "", new { @class = "text-danger" })
                </div>
                <div class="required control-label col-md-1 text-semibold text-right">Employer</div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.EmployerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmployerName, "", new { @class = "text-danger" })
                </div>
                <div class="required control-label col-md-2 text-semibold text-right">Manager's Name</div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.SupervisorName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SupervisorName, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group">
                <div class="control-label col-md-1 text-semibold ">Career level</div>
                <div class="col-md-3">
                    @Html.DropDownList("CareerLevelID", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CareerLevelID, "", new { @class = "text-danger" })
                </div>
                <div class="control-label col-md-1 text-semibold">Job Title</div>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="required control-label col-md-1 text-semibold">Start Date</div>
                <div class="col-md-3">
                    @Html.TextBoxFor(x => x.StartDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
                <div id="hidedatediv">
                    <div class="control-label col-md-1 text-semibold">End Date</div>
                    <div class="col-md-3">
                        @Html.TextBoxFor(x => x.EndDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <label class="checkbox-inline checkbox-right text-semibold col-md-12 col-lg-pull-4 text-right " for="CurrentlyWorking">
                        @Html.CheckBox("CurrentlyWorking", new { @class = "styled", @id = "CurrentlyWorking" })
                        @Html.ValidationMessageFor(model => model.CurrentlyWorking, "", new { @class = "text-danger" })
                        Currently Working
                    </label>
                </div>
            </div>
            <div class="form-group">
                <div id="hidereasonofleaving">
                    <div class="control-label col-md-1 text-semibold">Reason of Leaving</div>
                    <div class="col-md-5">
                        @Html.TextAreaFor(model => model.ReasonOfLeaving, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ReasonOfLeaving, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="control-label col-md-1 text-semibold text-left">Address</div>
                <div class="col-md-5">
                    @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="control-label col-md-1 text-semibold text-right">Country</div>
                <div class="col-md-3">
                    @Html.DropDownList("CountryID", null, new { @class = "form-control" })
                    @Html.HiddenFor(model => model.CountryID, new { id = "selectedCountryIDHidden" })
                    @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                </div>
                <div class="control-label col-md-1 text-semibold text-right">City</div>
                <div class="col-md-3">
                    <select class="form-control dropdown-toggle dropdown ComboBoxWidth" id="CityID" name="CityID"></select>
                    @Html.HiddenFor(model => model.CityID, new { id = "selectedCityIdHidden" })
                    @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-group">
                <div class="text-semibold text-left">Reponsibilities:</div>
                <hr />
            </div>
            <div class="form-group">
                <div class="required control-label col-md-1 text-semibold">1:</div>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Responsibility1, new { @class = "form-control multi-line", @cols = 3, @rows = 2, placeholder = "Up to Maximum Length of 250character" })
                    @Html.ValidationMessageFor(m => m.Responsibility1, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="required control-label col-md-1 text-semibold">2:</div>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Responsibility2, new { @class = "form-control multi-line", @cols = 3, @rows = 2, placeholder = "Up to Maximum Length of 250character" })
                    @Html.ValidationMessageFor(m => m.Responsibility2, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="required control-label col-md-1 text-semibold">3:</div>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Responsibility3, new { @class = "form-control multi-line", @cols = 3, @rows = 2, placeholder = "Up to Maximum Length of 250character" })
                    @Html.ValidationMessageFor(m => m.Responsibility3, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="control-label col-md-3 text-semibold">May we contact the employer?</div>
                <div class="col-md-2">
                    <div class="radio-inline text-semibold">
                        @Html.RadioButton("ContactSelection", "ContactEmployerYes", new { @checked = "checked", @id = "ContactEmployerYes" })
                        @Html.ValidationMessageFor(model => model.ContactEmployerYes, "", new { @class = "text-danger" })
                        Yes
                    </div>
                </div>
                <div class="col-md-4">
                    <label class="radio-inline text-semibold">
                        @Html.RadioButton("ContactSelection", "ContactEmployerNo", new { @class = "checked", @id = "ContactEmployerNo" })
                        @Html.ValidationMessageFor(model => model.ContactEmployerNo, "", new { @class = "text-danger" })
                        No
                    </label>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <label class="text-black">Are you sure you want to delete?</label>
        &nbsp;&nbsp;
        <button type="button" id="btnGetEdit" onclick="ExperienceDetailGetEdit(@Model.ExpID)" class="btn bg-primary">Back</button>
        @*<button type="button" class=" btn btn-primary bg-primary-300" name="Close" data-dismiss="modal">Close</button>*@
        <button type="button" id="btnDeletePost" class="btn bg-grey" value="Delete">Delete</button>
    </div>
}
<script type="text/javascript">
        $(document).ready(function () {
            var model = {
               "ContactEmployerYes": @Html.Raw(Json.Encode(Model.ContactEmployerYes)),
                "ContactEmployerNo": @Html.Raw(Json.Encode(Model.ContactEmployerNo)),
            };
            LoadDD2();
        ExperienceDetailPostDelete(@Model.CandidateID);
        FormControlsScriptEditExperience('@Model.ContactEmployerYes', '@Model.ContactEmployerNo');
    });
</script>
