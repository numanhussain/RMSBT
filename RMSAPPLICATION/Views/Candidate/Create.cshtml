@model RMSCORE.EF.Candidate

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "formEditID", id = "formEditID" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.CandidateID)
    @Html.HiddenFor(model => model.UserID)
    <!-- Page container -->
    <head>
        <script type="text/javascript" src="~/Theme/assets/js/plugins/loaders/pace.min.js"></script>
        <script type="text/javascript" src="~/Theme/assets/js/core/libraries/jquery.min.js"></script>
        <script type="text/javascript" src="~/Theme/assets/js/core/libraries/bootstrap.min.js"></script>
        <script type="text/javascript" src="~/Theme/assets/js/plugins/loaders/blockui.min.js"></script>
        <script type="text/javascript" src="~/Theme/assets/js/plugins/ui/nicescroll.min.js"></script>
        <script type="text/javascript" src="~/Theme/assets/js/plugins/ui/drilldown.js"></script>
        <!-- /core JS files -->
        <!-- Theme JS files -->
        <script type="text/javascript" src="~/Theme/assets/js/plugins/notifications/jgrowl.min.js"></script>
        <script type="text/javascript" src="~/Theme/assets/js/plugins/ui/moment/moment.min.js"></script>
        <script type="text/javascript" src="~/Theme/assets/js/plugins/pickers/daterangepicker.js"></script>
        <script type="text/javascript" src="~/Theme/assets/js/plugins/pickers/anytime.min.js"></script>
        <script type="text/javascript" src="~/Theme/assets/js/plugins/pickers/pickadate/picker.js"></script>
        <script type="text/javascript" src="~/Theme/assets/js/plugins/pickers/pickadate/picker.date.js"></script>
        <script type="text/javascript" src="~/Theme/assets/js/plugins/pickers/pickadate/picker.time.js"></script>
        <script type="text/javascript" src="~/Theme/assets/js/plugins/pickers/pickadate/legacy.js"></script>
        <script type="text/javascript" src="~/Theme/assets/js/core/app.js"></script>
        <script type="text/javascript" src="~/Theme/assets/js/pages/picker_date.js"></script>
        <style>
            .panel-body {
                background-color: white;
            }

            .required:after {
                content: "*";
                font-weight: bold;
                color: red;
            }
        </style>
    </head>
    <div style="margin-top:-25px">
        <div class="modal-header">
            <div class="modal-title">
                <h3 class="text-black"><i class="icon-person text-black"></i>&nbsp;&nbsp;Personal Detail&nbsp;<small class="text-grey-400">(All fields with an asterisk (*) are mandatory)</small></h3>
            </div>
        </div>
        <div class="panel panel-flat">
            <div class="breadcrumb-line bg-green-600" style="height:41px">
                <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                <ul class="breadcrumb">
                    @*<li><a href="~/Job/Index"> Dashboard</a></li>
                        <li><a class="active"> Miscellaneous</a></li>
                        <li class="active"> - Add New</li>*@
                </ul>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="form-group col-md-4">
                        <div>
                            <label class=" required control-label text-semibold">Name</label>
                            @Html.TextBoxFor(model => model.CName, new { @class = "form-control " })
                            <div class="small">
                                @Html.ValidationMessageFor(model => model.CName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        <div>
                            <label class="required control-label text-semibold">Father's/Husband's Name</label>
                            @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                            <div class="small">
                                @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        <div>
                            <label class="required control-label text-semibold">CNIC/Passport No</label>
                            @Html.EditorFor(model => model.CNICNo, new { htmlAttributes = new { @class = "form-control", placeholder = "xxxxx-xxxxxxx-x" } })
                            <div class="small">
                                @Html.ValidationMessageFor(model => model.CNICNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-3">
                        <div>
                            <div class="form-group">

                                <label class="required control-label text-semibold">Date of Birth</label>
                                <div class="input-group">
                                    @Html.TextBoxFor(x => x.DOB, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "text", @id = "anytime-weekday" })
                                    <span class="input-group-addon"><i class="icon-calendar3"></i></span>
                                </div>
                               
                            </div>
                        </div>
                        <span class="help-block">Format must be (MM/DD/YYYY)</span>
                    </div>
                    <div class="form-group col-md-2">
                        <div>
                            <label class="required control-label text-semibold">Gender</label>
                            @Html.DropDownList("GenderID", null, new { @class = "form-control" })
                        </div>
                        <div class="small">
                            @Html.ValidationMessageFor(model => model.GenderID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-2">
                        <div>
                            <label class=" required control-label text-semibold">Marital Status</label>
                            @Html.DropDownList("MartialStatusID", null, new { @class = "form-control" })
                        </div>
                        <div class="small">
                            @Html.ValidationMessageFor(model => model.MartialStatusID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-2">
                        <div>
                            <label class="required control-label text-semibold">Religion</label>
                            @Html.DropDownList("ReligionID", null, new { @class = "form-control" })
                        </div>
                        <div class="small">
                            @Html.ValidationMessageFor(model => model.ReligionID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        <div>
                            <label class="control-label text-semibold">Blood Group</label>
                            @Html.DropDownList("BloodGroupID", null, new { @class = "form-control" })
                        </div>
                        <div class="small">
                            @Html.ValidationMessageFor(model => model.BloodGroupID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-3">
                        <div>
                            <label class="control-label text-semibold">Area of interest</label>
                            @Html.DropDownList("AreaOfInterestID", null, new { @class = "form-control" })
                        </div>
                        <div class="small">
                            @Html.ValidationMessageFor(model => model.AreaOfInterestID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        <div>
                            <label class="required control-label text-semibold">Domicile</label>
                            @Html.DropDownList("DomicileCityID", null, new { @class = "form-control" })
                        </div>
                        <div class="small">
                            @Html.ValidationMessageFor(model => model.DomicileCityID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <div>
                            <label class="required required control-label text-semibold">Address</label>
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            <div class="small">
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-3">
                        <div>
                            <label class="required control-label text-semibold">Country</label>
                            @Html.DropDownList("CountryID", null, new { @class = "form-control" })
                            @Html.HiddenFor(model => model.CountryID, new { id = "selectedCountryIDHidden" })
                        </div>
                        <div class="small">
                            @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        <div>
                            <label class="required control-label text-semibold">City</label>
                            <select class="form-control dropdown-toggle dropdown ComboBoxWidth" id="CityID" name="CityID"></select>
                            @Html.HiddenFor(model => model.CityID, new { id = "selectedCityIdHidden" })
                        </div>
                        <div class="small">
                            @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        <div>
                            <label class="control-label text-semibold">Nationality</label>
                            @Html.DropDownList("NationalityCountryID", null, new { @class = "form-control" })
                        </div>
                        <div class="small">
                            @Html.ValidationMessageFor(model => model.NationalityCountryID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-3">
                        <div>
                            <label class="control-label text-semibold">Landline #</label>
                            @Html.EditorFor(model => model.LandlineNo, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        <div>
                            <label class="required control-label text-semibold">Cell #</label>
                            @Html.EditorFor(model => model.CellNo, new { htmlAttributes = new { @class = "form-control", placeholder = "+92-3001234567" } })
                            <div class="small">
                                @Html.ValidationMessageFor(model => model.CellNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        <div>
                            <label class="required control-label text-semibold">Email</label>
                            @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                            <div class="small">
                                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                @*<div class="row">
                        <div class="form-group col-md-12">
                            <div>
                                <label class="control-label text-semibold">Objective</label>
                                @Html.TextAreaFor(model => model.Objective, new { @class = "form-control", @cols = 5, @rows = 1 })
                            </div>
                        </div>
                    </div>*@
            </div>
            <div class="panel-footer">
                <a class="heading-elements-toggle"><i class="icon-more"></i></a>
                <div class="heading-elements">
                    <button type="button" onclick="LoadPVEduDetailIndex(@Model.CandidateID)" class="btn btn-success heading-btn pull-right">Next</button>
                    @*<button type="button" id="btnPostEdit" class="btn btn-success bg-success-800 pull" value="Save">Save</button>*@
                    <button type="button" id="btnPostCreate" class="btn btn-success heading-btn pull-right">Save</button>
                </div>
            </div>
        </div>
        <!-- /basic datatable -->
        <!-- /main content -->
        <!-- /page content -->
    </div>
}
<script>
    $(function () {
        var bindDatePicker = function () {
            $(".date").datetimepicker({
                format: 'YYYY-MM-DD',
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-arrow-up",
                    down: "fa fa-arrow-down"
                }
            }).find('input:first').on("blur", function () {
                // check if the date is correct. We can accept dd-mm-yyyy and yyyy-mm-dd.
                // update the format if it's yyyy-mm-dd
                var date = parseDate($(this).val());

                if (!isValidDate(date)) {
                    //create date based on momentjs (we have that)
                    date = moment().format('YYYY-MM-DD');
                }

                $(this).val(date);
            });
        }

        var isValidDate = function (value, format) {
            format = format || false;
            // lets parse the date to the best of our knowledge
            if (format) {
                value = parseDate(value);
            }

            var timestamp = Date.parse(value);

            return isNaN(timestamp) == false;
        }

        var parseDate = function (value) {
            var m = value.match(/^(\d{1,2})(\/|-)?(\d{1,2})(\/|-)?(\d{4})$/);
            if (m)
                value = m[5] + '-' + ("00" + m[3]).slice(-2) + '-' + ("00" + m[1]).slice(-2);

            return value;
        }

        bindDatePicker();
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        SavePersonalInfoFunction();
        LoadDD();
    });
</script>

